// This file is part of INSTINCT, the INS Toolkit for Integrated
// Navigation Concepts and Training by the Institute of Navigation of
// the University of Stuttgart, Germany.
//
// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at https://mozilla.org/MPL/2.0/.

/// @file INS_1581_19P.hpp
/// @brief Test Data for the file INS_1581.19P
/// @author Mikael Senger
/// @date 2024-06-28

#pragma once

// This is a small hack, which lets us change private/protected parameters
#if defined(__clang__)
    #pragma GCC diagnostic push
    #pragma GCC diagnostic ignored "-Wkeyword-macro"
    #pragma GCC diagnostic ignored "-Wmacro-redefined"
#endif
#define protected public
#define private public
#include "NodeData/GNSS/GnssNavInfo.hpp"
#undef protected
#undef private
#if defined(__clang__)
    #pragma GCC diagnostic pop
#endif

#include "Navigation/GNSS/Satellite/Ephemeris/GPSEphemeris.hpp"
#include "Navigation/GNSS/Satellite/Ephemeris/GalileoEphemeris.hpp"
#include "Navigation/GNSS/Satellite/Ephemeris/GLONASSEphemeris.hpp"
#include "Navigation/GNSS/Satellite/Ephemeris/BDSEphemeris.hpp"
#include "Navigation/GNSS/Satellite/Ephemeris/QZSSEphemeris.hpp"
// #include "Navigation/GNSS/Satellite/Ephemeris/SBASEphemeris.hpp"

namespace NAV::TESTS::RinexNavFileTests::v4_00
{
/// @brief Test Data for the file INS_1581.19P
const GnssNavInfo gnssNavInfo_INS_1581_19P = {
    .satelliteSystems = { GPS | GAL | GLO | BDS | QZSS | SBAS },
    .ionosphericCorrections = { {
        { .satSys = GAL, .alphaBeta = IonosphericCorrections::Alpha, .data = { 2.8500e+01, 7.8125e-03, 1.116943359375E-02, 0.0000e+00 } },
    } },
    .timeSysCorr = {
        { { GPST, UTC }, { .a0 = -3.725290298462E-09, .a1 = -7.105427357601E-15 } },
        { { GLNT, UTC }, { .a0 = -1.396983861923E-09, .a1 = 0.000000000000E+00 } },
        { { GLNT, GPST }, { .a0 = -2.887099981308E-08, .a1 = 0.000000000000E+00 } },
        { { GST, UTC }, { .a0 = -9.313225746155E-10, .a1 = 0.000000000000E+00 } },
        { { GST, GPST }, { .a0 = 3.696186468005E-09, .a1 = -1.332267629550E-15 } },
        { { GST, UTC }, { .a0 = -9.313225746155E-10, .a1 = 0.000000000000E+00 } },
        { { GST, UTC }, { .a0 = -9.313225746155E-10, .a1 = 0.000000000000E+00 } },
        { { GST, UTC }, { .a0 = -9.313225746155E-10, .a1 = 0.000000000000E+00 } },
        { { BDT, UTC }, { .a0 = -9.313225746155E-10, .a1 = -9.769962616701E-15 } },
    },
    .m_satellites = {
        { { GPS, 1 }, Satellite{
                          // NOLINTBEGIN
                          .m_navigationData /* std::vector<std::shared_ptr<SatNavData>> */ = {
                              std::make_shared<GPSEphemeris>(2019, 6, 6, 22, 0, 0, -3.462424501777e-05, -9.436007530894e-12, 0.000000000000e+00, //
                                                             4.100000000000e+01, -1.273437500000e+02, 4.150530029093e-09, 2.600635796634e+00,    //
                                                             -6.720423698425e-06, 8.921553497203e-03, 6.552785634995e-06, 5.153658721924e+03,    //
                                                             4.248000000000e+05, -1.285225152969e-07, -3.105805414428e+00, -1.434236764908e-07,  //
                                                             9.761313861903e-01, 2.615312500000e+02, 7.112214493196e-01, -7.808182384995e-09,    //
                                                             -1.592923494515e-10, 1.000000000000e+00, 2.056000000000e+03, 0.000000000000e+00,    //
                                                             2.000000000000e+00, 0.000000000000e+00, 5.587935447693e-09, 4.100000000000e+01,     //
                                                             4.176180000000e+05, 4.000000000000e+00),                                            //
                          },
                          // NOLINTEND
                      } },
        { { GLO, 4 }, Satellite{
                          // NOLINTBEGIN
                          .m_navigationData /* std::vector<std::shared_ptr<SatNavData>> */ = {
                              std::make_shared<GLONASSEphemeris>(2019, 6, 6, 21, 15, 0, 3.091366961598e-04, 9.094947017729e-13, 4.212000000000e+05, //
                                                                 -4.091441894531e+03, -1.242310523987e+00, 9.313225746155e-10, 0.000000000000e+00,  //
                                                                 1.900038037109e+04, 1.890688896179e+00, 9.313225746155e-10, 6.000000000000e+00,    //
                                                                 1.653417626953e+04, -2.484695434570e+00, -2.793967723846e-09, 0.000000000000e+00,  //
                                                                 1.830000000000e+02, -2.793967723846e-09, 3.000000000000e+00, 0.000000000000e+00),  //
                          },
                          // NOLINTEND
                      } },
        { { GAL, 2 }, Satellite{
                          // NOLINTBEGIN
                          .m_navigationData /* std::vector<std::shared_ptr<SatNavData>> */ = {
                              std::make_shared<GalileoEphemeris>(2019, 6, 6, 22, 40, 0, 6.366008892655E-05, 1.733724275255E-12, 0.000000000000E+00, //
                                                                 7.200000000000E+01, 1.047812500000E+02, 2.312596328920E-09, -7.626860954287E-01,   //
                                                                 4.980713129044E-06, 1.261847792193E-04, 1.181103289127E-05, 5.440612405777E+03,    //
                                                                 4.272000000000E+05, -5.401670932770E-08, 7.354717244466E-01, 1.247972249985E-07,   //
                                                                 9.880244040051E-01, 1.005625000000E+02, 1.196084944939E+00, -5.081997399876E-09,   //
                                                                 -1.957224383395E-10, 5.170000000000E+02, 2.056000000000E+03, 0.000000000000E+00,   //
                                                                 3.120000000000E+00, 0.000000000000E+00, -3.259629011154E-09, -4.190951585770E-09,  //
                                                                 4.278650000000E+05),                                                               //
                              // Unsure why this FNAV is needed
                              std::make_shared<GalileoEphemeris>(2019, 6, 6, 22, 50, 0, 6.366270827129E-05, 1.719513420539E-12, 0.000000000000E+00, //
                                                                 7.300000000000E+01, 1.049375000000E+02, 2.306167489704E-09, -6.882583138871E-01,   //
                                                                 4.984438419342E-06, 1.262001460418E-04, 1.180917024612E-05, 5.440612436295E+03,    //
                                                                 4.278000000000E+05, -8.009374141693E-08, 7.354687283904E-01, 1.247972249985E-07,   //
                                                                 9.880243791355E-01, 1.005625000000E+02, 1.196042062421E+00, -5.072354141053E-09,   //
                                                                 -2.096515899731E-10, 2.580000000000E+02, 2.056000000000E+03, 0.000000000000E+00,   //
                                                                 3.120000000000E+00, 0.000000000000E+00, -3.259629011154E-09, 0.000000000000E+00,   //
                                                                 4.285400000000E+05),                                                               //
                          },
                          // NOLINTEND
                      } },
        { { GAL, 27 }, Satellite{
                           // NOLINTBEGIN
                           .m_navigationData /* std::vector<std::shared_ptr<SatNavData>> */ = {
                               std::make_shared<GalileoEphemeris>(2019, 6, 7, 0, 0, 0, 4.544582916424E-04, -7.759126674500E-12, 0.000000000000E+00, //
                                                                  8.000000000000E+01, 1.234062500000E+02, 2.329382742427E-09, 2.826077716383E+00,   //
                                                                  5.813315510750E-06, 8.207908831537E-05, 1.095235347748E-05, 5.440627643585E+03,   //
                                                                  4.320000000000E+05, 3.166496753693E-08, 7.328425007803E-01, 3.725290298462E-08,   //
                                                                  9.875517527287E-01, 1.180312500000E+02, 2.927586923301E+00, -5.193787770679E-09,  //
                                                                  -2.453673633927E-10, 5.170000000000E+02, 2.056000000000E+03, 0.000000000000E+00,  //
                                                                  3.120000000000E+00, 0.000000000000E+00, 0.000000000000E+00, -2.328306436539E-10,  //
                                                                  4.326650000000E+05),                                                              //
                           },
                           // NOLINTEND
                       } },
        // { { SBAS, 36 }, Satellite{
        //                     .m_navigationData /* std::vector<std::shared_ptr<SatNavData>> */ = {
        //                         std::make_shared<SBASEphemeris>(2019, 6, 7, 0, 0, 32, 0.000000000000e+00, 0.000000000000e+00, 4.320390000000e+05, //
        //                                                         4.200368800000e+04, 0.000000000000e+00, 0.000000000000e+00, 6.300000000000e+01,   //
        //                                                         3.674846960000e+03, 0.000000000000e+00, 0.000000000000e+00, 3.276700000000e+04,   //
        //                                                         0.000000000000e+00, 0.000000000000e+00, 0.000000000000e+00, 1.710000000000e+02),  //
        //                     },
        //                 } },
        // { { SBAS, 23 }, Satellite{
        //                     .m_navigationData /* std::vector<std::shared_ptr<SatNavData>> */ = {
        //                         std::make_shared<SBASEphemeris>(2019, 6, 6, 23, 59, 12, 0.000000000000e+00, 0.000000000000e+00, 4.320410000000e+05, //
        //                                                         3.594460000000e+04, 0.000000000000e+00, 0.000000000000e+00, 6.300000000000e+01,     //
        //                                                         2.204414000000e+04, 0.000000000000e+00, 0.000000000000e+00, 3.276700000000e+04,     //
        //                                                         0.000000000000e+00, 0.000000000000e+00, 0.000000000000e+00, 1.880000000000e+02),    //
        //                         std::make_shared<SBASEphemeris>(2019, 6, 7, 0, 01, 52, 0.000000000000e+00, 0.000000000000e+00, 4.321220000000e+05,  //
        //                                                         3.594460000000e+04, 0.000000000000e+00, 0.000000000000e+00, 6.300000000000e+01,     //
        //                                                         2.204414000000e+04, 0.000000000000e+00, 0.000000000000e+00, 3.276700000000e+04,     //
        //                                                         0.000000000000e+00, 0.000000000000e+00, 0.000000000000e+00, 1.890000000000e+02),    //
        //                     },
        //                 } },
        { { BDS, 5 }, Satellite{
                          // NOLINTBEGIN
                          .m_navigationData /* std::vector<std::shared_ptr<SatNavData>> */ = {
                              std::make_shared<BDSEphemeris>(5, 2019, 6, 6, 22, 0, 0, -2.213711850345e-04, -4.911271389574e-11, 0.000000000000e+00, //
                                                             1.000000000000e+00, -4.562968750000e+02, -3.752656313198e-09, -1.273125246548e+00,     //
                                                             -1.499615609646e-05, 9.644716046751e-04, -1.047831028700e-05, 6.493460638046e+03,      //
                                                             4.248000000000e+05, -5.075708031654e-08, 2.769452268335e+00, 9.639188647270e-08,       //
                                                             1.108218186421e-01, 3.154375000000e+02, -9.116033205088e-01, 4.728768400756e-09,       //
                                                             3.957307694893e-10, 0.000000000000e+00, 7.000000000000e+02, 0.000000000000e+00,        //
                                                             2.000000000000e+00, 0.000000000000e+00, -4.000000000000e-10, -8.900000000000e-09,      //
                                                             4.248276000000e+05, 0.000000000000e+00),                                               //
                          },
                          // NOLINTEND
                      } },
        { { BDS, 6 }, Satellite{
                          // NOLINTBEGIN
                          .m_navigationData /* std::vector<std::shared_ptr<SatNavData>> */ = {
                              std::make_shared<BDSEphemeris>(6, 2019, 6, 6, 20, 0, 0, 9.215852478519e-04, -3.255529179569e-11, 0.000000000000e+00, //
                                                             1.000000000000e+00, 7.567187500000e+01, 1.792931825664e-09, -1.855979805191e+00,      //
                                                             2.284999936819e-06, 8.097116136923e-03, 6.556510925293e-06, 6.493510314941e+03,       //
                                                             4.176000000000e+05, -1.396983861923e-07, -1.110316436656e+00, -9.778887033463e-09,    //
                                                             9.441736086663e-01, 3.709375000000e+01, -2.198623993492e+00, -2.235450258333e-09,     //
                                                             4.243033882249e-10, 0.000000000000e+00, 7.000000000000e+02, 0.000000000000e+00,       //
                                                             2.000000000000e+00, 0.000000000000e+00, 8.100000000000e-09, -1.800000000000e-09,      //
                                                             4.176180000000e+05, 0.000000000000e+00),                                              //
                          },
                          // NOLINTEND
                      } },
        { { BDS, 19 }, Satellite{
                           .m_navigationData /* std::vector<std::shared_ptr<SatNavData>> */ = {
                               std::make_shared<BDSEphemeris>(19, 2019, 6, 7, 0, 0, 0, 1.205758890137E-04, 8.377298854612E-12, 0.000000000000E+00, //
                                                              1.000000000000E+00, -1.503125000000E+01, 3.899448141953E-09, 1.588875372705E+00,     //
                                                              -7.557682693005E-07, 1.035088556819E-03, 1.032557338476E-05, 5.282618890762E+03,     //
                                                              4.320000000000E+05, -4.516914486885E-08, -1.768426248657E+00, 6.984919309616E-09,    //
                                                              9.613617345408E-01, 1.478437500000E+02, -1.218753684200E+00, -6.658134480883E-09,    //
                                                              4.689481049995E-10, 0.000000000000E+00, 7.000000000000E+02, 0.000000000000E+00,      //
                                                              2.000000000000E+00, 0.000000000000E+00, 8.800000000000E-09, 8.800000000000E-09,      //
                                                              4.344180000000E+05, 1.000000000000E+00),                                             //
                           },
                       } },
        { { QZSS, 2 }, Satellite{
                           // NOLINTBEGIN
                           .m_navigationData /* std::vector<std::shared_ptr<SatNavData>> */ = {
                               std::make_shared<QZSSEphemeris>(2019, 6, 7, 0, 0, 0, -1.583248376846e-07, -2.273736754432e-13, 0.000000000000e+00, //
                                                               2.900000000000e+01, 2.212812500000e+02, 1.510420057915e-09, -2.724294029461e+00,   //
                                                               6.150454282761e-06, 7.553001702763e-02, 2.791360020638e-05, 6.492970367432e+03,    //
                                                               4.320000000000e+05, 6.314367055893e-07, 5.155336228904e-01, -7.711350917816e-07,   //
                                                               7.619150161787e-01, -7.406250000000e+02, -1.585670034345e+00, -1.856505902351e-09, //
                                                               -1.225408186027e-09, 2.000000000000e+00, 2.056000000000e+03, 1.000000000000e+00,   //
                                                               2.800000000000e+00, 0.000000000000e+00, 1.396983861923e-09, 7.970000000000e+02,    //
                                                               4.284180000000e+05, 0.000000000000e+00),                                           //
                               std::make_shared<QZSSEphemeris>(2019, 6, 7, 1, 0, 0, -1.578591763973e-07, -2.273736754432e-13, 0.000000000000e+00, //
                                                               3.300000000000e+01, 2.993750000000e+02, 1.878649681871e-09, -2.461768327218e+00,   //
                                                               7.683411240578e-06, 7.553735992406e-02, 2.657063305378e-05, 6.492952762604e+03,    //
                                                               4.356000000000e+05, 8.344650268555e-07, 5.155277068497e-01, -2.644956111908e-07,   //
                                                               7.619108059004e-01, -6.720312500000e+02, -1.585621254804e+00, -1.966153326749e-09, //
                                                               -1.222550924153e-09, 2.000000000000e+00, 2.056000000000e+03, 1.000000000000e+00,   //
                                                               2.800000000000e+00, 0.000000000000e+00, 1.396983861923e-09, 8.010000000000e+02,    //
                                                               4.320180000000e+05, 0.000000000000e+00),                                           //
                           },
                           // NOLINTEND
                       } },
    },
};

} // namespace NAV::TESTS::RinexNavFileTests::v4_00