name: analyze
on:
  pull_request:
  release:
    types: [published]
  push:
   # tags:
   # branches:
   #   - main
   #   - develop

env:
  # Conan cache environment variables
  CONAN_SYSREQUIRES_MODE: enabled
  CONAN_USER_HOME: "${{ github.workspace }}/conan-cache"
  CONAN_USER_HOME_SHORT: "${{ github.workspace }}/conan-cache/short"

jobs:
  Clang-tidy:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Setup Cache
        uses: ./.github/actions/setup_cache
        with:
          compiler: llvm
          build_type: Release
      - name: Setup Cpp
        uses: aminya/setup-cpp@v1
        with:
          compiler: llvm
          cmake: true
          conan: true
          clangtidy: "19.1.5"
      - name: Setup Linux
        run: |
          sudo apt install -y libglfw3-dev libglfw3
      - name: Create default conan profile
        run: |
          conan profile detect --force
      - name: Check tool versions
        uses: ./.github/actions/check_tool_versions
        with:
          clangtidy: true
      - name: Installing conan dependencies
        run: |
          conan install . --build=missing -s build_type=Release -s compiler.cppstd=17
      - name: Configure CMake
        run: |
          cmake -B ./build -S. -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE="build/Release/generators/conan_toolchain.cmake" -DENABLE_MAIN=ON -DENABLE_TESTING=ON -DENABLE_DOXYGEN=OFF -DLOG_LEVEL=DATA -DWARNINGS_AS_ERRORS=ON -DENABLE_CPPCHECK=OFF -DENABLE_CLANG_TIDY=ON -DENABLE_INCLUDE_WHAT_YOU_USE=OFF
      - name: Copy compile commands
        run: |
          cmake --build ./build --target copy-compile-commands --config Release
      - name: Run clang-tidy on ./src
        run: |
          python3 ./tools/run-clang-tidy.py $PWD/src
      - name: Run clang-tidy on ./test
        run: |
          python3 ./tools/run-clang-tidy.py $PWD/test